--- # roles/resources/tests/vagrant.yml

- hosts: all
  remote_user: ubuntu
  become: false
  gather_facts: true
  pre_tasks:


    - set_fact: fact_controller_user="{{ lookup('env','USER') }}"
    - debug: var=fact_controller_user

    - set_fact: fact_controller_home="{{ lookup('env','HOME') }}"
    - debug: var=fact_controller_home

    - set_fact: fact_role_path="{{ lookup('pipe','pwd')|dirname }}"
    - debug: var=fact_role_path

#    - set_fact: fact_role_name="{{ lookup('pipe','pwd')|dirname|basename }}"
#    - debug: var=fact_role_name2

  vars:

# project_vars usually from group_vars/all/defaults.yml repeated here as not inlcuded in tests

## controller user vars

    - project_controller_user_name      : '{{ fact_controller_user }}'
    - project_controller_user_home      : '{{ fact_controller_home }}'
    - project_controller_resources_home : '{{ project_controller_user_home }}'


## deployment user vars

    - project_deployment_user_name      : 'ubuntu'
    - project_deployment_user_home      : '/home/{{ project_deployment_user_name }}'
    - project_deployment_resources_home : '{{ project_deployment_user_home }}'

# standard vars start here ####################################################

    - resources_debug : 'true'

    - resources_controller_user           : '{{ project_controller_user_name }}'
    - resources_controller_home           : '{{ project_controller_user_home }}'
    - resources_controller_resources_home : '{{ project_controller_resources_home }}'

    - resources_deployment_user           : '{{ project_deployment_user_name }}'
    - resources_deployment_home           : '{{ project_deployment_user_home }}'
    - resources_deployment_resources_home : '{{ project_deployment_resources_home }}'

# Help file

    - resources_acemenu_help_file_template_path: '/templates/bin/acemenu/help/example_aceadmin_helpfile.md.j2'

## atomic versioning example
#
#    - resources_major             : '0'
#    - resources_moderate_revision : '0'
#    - resources_minor_revision    : '1'
#    - resources_build             : ''

## Package
    - resources_package_state   : 'present'
    - resources_package_version : '2.0.1'
    - resources_package_name    : "vagrant_{{ resources_package_version }}_i686.deb"

    - resources_controller_resources_dir : '{{ resources_controller_resources_home }}/src/sw/vagrant/debs'
    - resources_deployment_resources_dir : '{{ resources_deployment_resources_home }}/src/sw/vagrant/debs'

# Resource URLs

    - resources_package_url      : "https://releases.hashicorp.com/vagrant/2.0.1/vagrant_2.0.1_i686.deb"
#    - resources_checksum_url     : "https://releases.hashicorp.com/vagrant/2.0.1/ vagrant_2.0.1_SHA256SUMS"
#    - resources_checksum_sig_url : "https://releases.hashicorp.com/vagrant/2.0.1/ vagrant_2.0.1_SHA256SUMS.sig"


# Directories

    - resources_ensure_dirs_on_remote:

        resources_remote_dir_01:

          state       : "directory"
          path        : '{{ resources_deployment_resources_dir }}'
          owner       : '{{ resources_deployment_user }}'
          group       : '{{ resources_deployment_user }}'
          mode        : '0755'
          recursive   : True

        resources_remote_dir_02:

          state       : "absent"
          path        : "ensure_dirs_test_2"
          owner       : '{{ resources_deployment_user }}'
          group       : '{{ resources_deployment_user }}'
          mode        : "0755"

# ensure_dirs_on_local: []

    - resources_ensure_dirs_on_local:

        resources_local_dir_001:

          state       : "absent"
          path        : "ensure_dirs_test_3"
          owner       : "{{ resources_controller_user }}"
          group       : "{{ resources_controller_user }}"
          mode        : "0755"

        resources_local_dir_002:

          state       : "directory"
          path        : "{{ resources_controller_resources_dir }}"
          owner       : "{{ resources_controller_user }}"
          group       : "{{ resources_controller_user }}"
          mode        : "0755"
          recursive   : True

    - fetch_skel_entries:

        - name : "ensure for acemenu help file for fetch"
          src:  ''
          path : '/etc/skel/bin/acemenu/help/fetch.md'
          force : no
          state: 'copy'

  roles:

    - ../../
