--- # roles/resources/tasks/main.yml

- name: Load OS specific variables
  include_vars: "{{ fact_role_path }}/vars/{{ ansible_os_family | lower }}.yml"
  tags:
    - resources
    - install

- name: "Debug variable values"
  include: "{{ fact_role_path }}/tasks/debug.yml"
  when: resources_debug

- name: Run any OS specific tasks
  include: "{{ fact_role_path }}/tasks/{{ ansible_os_family | lower }}.yml"

- name: "echo"
  shell: echo '{{ item.value.state }}'
  with_dict: '{{ resources_on_remote }}'

# Ensure for resources on remote

- name: "ensure for remote directories"
  become: '{{ resources_deployment_user }}'
  file:
    state   : '{{ item.value.state   | default("directory") }}'
    path    : '{{ item.value.path    | default(mandatory) }}'
    owner   : '{{ item.value.owner   | default(ensure_dirs_default_remote_owner) }}'
    group   : '{{ item.value.group   | default(ensure_dirs_default_remote_group) }}'
    mode    : '{{ item.value.mode    | default(ensure_dirs_default_remote_directory_mode) }}'
    recurse : '{{ item.value.recurse | default(omit) }}'
  with_dict: '{{ resources_on_remote }}'
  when: item.value.state is defined and item.value.state == 'directory' or item.value.state is defined and item.value.state =='absent'


# Ensure for resources on local system

- name: "echo"
  shell: echo '{{ item.value.state }}'
  with_dict: '{{ resources_on_local }}'

- name: "ensure for local directories"
  delegate_to: 127.0.0.1
  file:
    state   : '{{ item.value.state   | default("directory") }}'
    path    : '{{ item.value.path    | default(mandatory) }}'
    owner   : '{{ item.value.owner   | default(omit) }}'
    group   : '{{ item.value.group   | default(omit) }}'
    mode    : '{{ item.value.mode    | default(omit) }}'
    recurse : '{{ item.value.recurse | default(omit) }}'
  with_dict: '{{ resources_on_local }}'
  when: item.value.state is defined and item.value.state == 'directory' or item.value.state is defined and item.value.state =='absent'
